{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","name","sex","slug","to","classNames","findParent","array","parentName","find","parent","PeopleTable","people","personId","map","born","died","motherName","fatherName","mother","father","PeoplePage","useState","isLoading","setIsLoading","isError","setIsError","setPeople","match","useMatch","selectedId","params","useEffect","catch","finally","length","App","role","isActive","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.35bfaf6e.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n  personId: string;\n};\n\nconst findParent = (\n  array: Person[], parentName: string | null,\n): Person | null => {\n  return array.find(parent => parent.name === parentName) || null;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, personId }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex,\n            born,\n            died,\n            motherName,\n            fatherName,\n            slug,\n          } = person;\n\n          const mother = findParent(people, motherName);\n          const father = findParent(people, fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames({\n                'has-background-warning': slug === personId,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother\n                  ? <PersonLink person={mother} />\n                  : motherName || '-'}\n              </td>\n              <td>\n                {father\n                  ? <PersonLink person={father} />\n                  : fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useMatch } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n\n  const match = useMatch('/people/:personId');\n  const selectedId = match?.params.personId || '';\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            ? <Loader />\n            : (\n              <>\n                {isError && (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    Something went wrong\n                  </p>\n                )}\n\n                {people.length <= 0 && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n\n                <PeopleTable people={people} personId={selectedId} />\n              </>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","// import { Loader } from './components/Loader';\n\nimport './App.scss';\nimport React from 'react';\nimport classNames from 'classnames';\nimport {\n  Route,\n  Routes,\n  Navigate,\n  NavLink,\n} from 'react-router-dom';\n\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"/people\"\n              className={({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home Page</h1>}\n            />\n            <Route\n              path=\"/home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route\n              path=\"/people\"\n              element={<PeoplePage />}\n            />\n            <Route\n              path=\"/people/:personId\"\n              element={<PeoplePage />}\n            />\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}